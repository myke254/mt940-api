"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var compare_arrays_1 = require("../utils/compare-arrays");
var tokens_1 = require("./../tokens");
/**
 * @description :60M:
 * @type {Uint8Array}
 */
var token1 = new Uint8Array([tokens_1.colonSymbolCode, 54, 48, 77, tokens_1.colonSymbolCode]);
/**
 * @description :60F:
 * @type {Uint8Array}
 */
var token2 = new Uint8Array([tokens_1.colonSymbolCode, 54, 48, 70, tokens_1.colonSymbolCode]);
var token1Length = token1.length;
var token2Length = token2.length;
var openingBalanceTag = {
    readToken: function (state) {
        var isToken1 = compare_arrays_1.default(token1, 0, state.data, state.pos, token1Length);
        var isToken2 = !isToken1 && compare_arrays_1.default(token2, 0, state.data, state.pos, token2Length);
        if (!isToken1 && !isToken2) {
            return 0;
        }
        this.init();
        state.statements[state.statementIndex].openingBalance = this.info;
        return state.pos + (isToken1 ? token1Length : token2Length);
    },
    init: function () {
        this.info = {
            isCredit: false,
            date: '',
            currency: '',
            value: 0
        };
        this.contentPos = 0;
        this.balance = [];
    },
    readContent: function (_state, symbolCode) {
        var _a = this, info = _a.info, contentPos = _a.contentPos;
        if (!contentPos) {
            // status is 'C'
            info.isCredit = symbolCode === tokens_1.bigCSymbolCode;
        }
        else if (contentPos < 7) {
            // it's a date. Collect date and convert it from YYMMDD to YYYY-MM-DD
            if (!info.date) {
                if (symbolCode === tokens_1.nineSymbolCode) {
                    info.date = '19';
                }
                else {
                    info.date = '20';
                }
            }
            info.date += String.fromCharCode(symbolCode);
            if (contentPos === 2 || contentPos === 4) {
                info.date += '-';
            }
        }
        else if (contentPos < 10) {
            // it's a currency
            info.currency += String.fromCharCode(symbolCode);
        }
        else {
            // it's a balance
            // use always a dot as decimal separator
            if (symbolCode === tokens_1.commaSymbolCode) {
                symbolCode = tokens_1.dotSymbolCode;
            }
            this.balance.push(symbolCode);
        }
        this.contentPos++;
    },
    close: function () {
        this.info.value = parseFloat(String.fromCharCode.apply(String, this.balance));
    }
};
exports.default = openingBalanceTag;
