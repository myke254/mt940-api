"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var compare_arrays_1 = require("../utils/compare-arrays");
var tokens_1 = require("./../tokens");
/**
 * @description :86:
 * @type {Uint8Array}
 */
var token = new Uint8Array([tokens_1.colonSymbolCode, 56, 54, tokens_1.colonSymbolCode]);
var tokenLength = token.length;
var informationTag = {
    multiline: true,
    readToken: function (state) {
        if (!compare_arrays_1.default(token, 0, state.data, state.pos, tokenLength)) {
            return 0;
        }
        return state.pos + tokenLength;
    },
    close: function (state) {
        var statement = state.statements[state.statementIndex];
        var description = [];
        var descriptionLength = 0;
        // filter denied symbols
        for (var i = state.tagContentStart; i < state.tagContentEnd; i++) {
            var symbolCode = state.data[i];
            if (
            // remove \r & \n
            symbolCode !== tokens_1.returnSymbolCode && symbolCode !== tokens_1.newLineSymbolCode && (
            // use 1 space instead of multiple ones
            symbolCode !== tokens_1.spaceSymbolCode || description[descriptionLength - 1] !== symbolCode)) {
                description[descriptionLength] = symbolCode;
                descriptionLength++;
            }
        }
        statement.transactions[state.transactionIndex].description = String.fromCharCode.apply(String, description).trim();
    }
};
exports.default = informationTag;
